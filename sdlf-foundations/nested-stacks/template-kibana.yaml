# Centralized Logging Solution
#
# template for centralized-logging-solution
# **DO NOT DELETE**
#
# author: aws-solutions-builder@
AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: (SO0009) - AWS Centralized Logging Solution (adapted/simplified from upstream v4.0.3)

Parameters:
  DomainName:
    Description: Name for the Amazon ES domain that this template will create. Domain names must start with a lowercase letter and must be between 3 and 28 characters. Valid characters are a-z (lowercase only), 0-9.
    Type: String
    Default: sdlf

  AdminEmail:
    Type: String
    AllowedPattern: "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$"
    Description: E-mail address of the Elasticsearch/OpenSearch/Cognito admin

  ClusterSize:
    Description: Amazon ES cluster size; small (4 data nodes), medium (6 data nodes), large (6 data nodes)
    Type: String
    Default: Small
    AllowedValues:
      - Small
      - Medium
      - Large


  # SDLF specific parameters
  LambdaCatalog:
    Type: String
  LambdaRouting:
    Type: String
  LambdaCatalogRedrive:
    Type: String
  LambdaRoutingRedrive:
    Type: String
  LambdaStep1:
    Type: String
  LambdaJobCheckStep:
    Type: String
  LambdaStep2:
    Type: String
  LambdaReplicate:
    Type: String
  KMSKeyId:
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Elasticsearch Configuration
        Parameters:
          - DomainName
          - AdminEmail
          - ClusterSize
    ParameterLabels:
      AdminEmail:
        default: Admin Email Address
      DomainName:
        default: Elasticsearch/OpenSearch Domain name
      ClusterSize:
        default: Cluster Size

Mappings:
  CLMap:
    Metric:
      SendAnonymousMetric: Yes
      MetricsEndpoint: "https://metrics.awssolutionsbuilder.com/generic"
  ESMap:
    NodeCount:
      Small: 4
      Medium: 6
      Large: 6
    MasterSize:
      Small: c5.large.elasticsearch
      Medium: c5.large.elasticsearch
      Large: c5.large.elasticsearch
    InstanceSize:
      Small: r5.large.elasticsearch
      Medium: r5.2xlarge.elasticsearch
      Large: r5.4xlarge.elasticsearch

  # Lambda source code mapping
  SourceCode:
    General:
      S3Bucket: "solutions"
      KeyPrefix: "centralized-logging/v4.0.3"

Resources:
  ######## DATALAKE SPECIFIC RESOURCES #########
  ######## LAMBDA AND ROLE FOR STAGE CLOUDWATCH UPDATE #########
  rLambdaCatalogUpdateSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn: CWDestPolicy
    Properties:
      LogGroupName: !Sub "/aws/lambda/${LambdaCatalog}"
      DestinationArn: !GetAtt CLDataStream.Arn
      RoleArn: !GetAtt CWDestinationRole.Arn
      FilterPattern: "[log_type, log_timestamp, log_id, log_message]"

  rLambdaRoutingUpdateSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn: CWDestPolicy
    Properties:
      LogGroupName: !Sub "/aws/lambda/${LambdaRouting}"
      DestinationArn: !GetAtt CLDataStream.Arn
      RoleArn: !GetAtt CWDestinationRole.Arn
      FilterPattern: "[log_type, log_timestamp, log_id, log_message]"

  rLambdaCatalogRedriveUpdateSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn: CWDestPolicy
    Properties:
      LogGroupName: !Sub "/aws/lambda/${LambdaCatalogRedrive}"
      DestinationArn: !GetAtt CLDataStream.Arn
      RoleArn: !GetAtt CWDestinationRole.Arn
      FilterPattern: "[log_type, log_timestamp, log_id, log_message]"

  rLambdaRoutingRedriveUpdateSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn: CWDestPolicy
    Properties:
      LogGroupName: !Sub "/aws/lambda/${LambdaRoutingRedrive}"
      DestinationArn: !GetAtt CLDataStream.Arn
      RoleArn: !GetAtt CWDestinationRole.Arn
      FilterPattern: "[log_type, log_timestamp, log_id, log_message]"

  LambdaStep1UpdateSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn: CWDestPolicy
    Properties:
      LogGroupName: !Sub "/aws/lambda/${LambdaStep1}"
      DestinationArn: !GetAtt CLDataStream.Arn
      RoleArn: !GetAtt CWDestinationRole.Arn
      FilterPattern: "[log_type, log_timestamp, log_id, log_message]"

  LambdaJobCheckStepUpdateSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn: CWDestPolicy
    Properties:
      LogGroupName: !Sub "/aws/lambda/${LambdaJobCheckStep}"
      DestinationArn: !GetAtt CLDataStream.Arn
      RoleArn: !GetAtt CWDestinationRole.Arn
      FilterPattern: "[log_type, log_timestamp, log_id, log_message]"

  LambdaStep2UpdateSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn: CWDestPolicy
    Properties:
      LogGroupName: !Sub "/aws/lambda/${LambdaStep2}"
      DestinationArn: !GetAtt CLDataStream.Arn
      RoleArn: !GetAtt CWDestinationRole.Arn
      FilterPattern: "[log_type, log_timestamp, log_id, log_message]"

  LambdaReplicateUpdateSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn: CWDestPolicy
    Properties:
      LogGroupName: !Sub "/aws/lambda/${LambdaReplicate}"
      DestinationArn: !GetAtt CLDataStream.Arn
      RoleArn: !GetAtt CWDestinationRole.Arn
      FilterPattern: "[log_type, log_timestamp, log_id, log_message]"

  rCatalogIndexRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole

  rCatalogIndexRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub catalogindex-${AWS::Region}
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*
        - Effect: Allow
          Action:
            - es:ESHttpPost
            - es:ESHttpGet
            - es:ESHttpPut
          Resource: !GetAtt ESDomain.Arn
        - Effect: "Allow"
          Action:
            - dynamodb:DescribeStream
            - dynamodb:GetRecords
            - dynamodb:GetShardIterator
            - dynamodb:ListStreams
          Resource: !ImportValue octagon-ObjectMetadata-stream-arn
      Roles:
        - !Ref rCatalogIndexRole

  rCatalogIndexFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambda/catalog-search/src
      Description: Logs ObjectMetadata DynamoDB Streams to ElasticSearch
      Environment:
        Variables:
          ES_ENDPOINT: !GetAtt ESDomain.DomainEndpoint
          ES_REGION: !Ref AWS::Region
      Handler: index.handler
      Runtime: nodejs16.x
      Timeout: 180
      MemorySize: 256
      Role: !GetAtt rCatalogIndexRole.Arn

  rCatalogTableStreamLambdaMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      EventSourceArn: !ImportValue octagon-ObjectMetadata-stream-arn
      FunctionName: !GetAtt rCatalogIndexFunction.Arn
      StartingPosition: LATEST

  ######## ELASTIC SEARCH STACK SPECIFIC #########
  #
  # Cognito and IAM
  #
  HelperRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole

  HelperRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: HelperRolePolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: 
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:CreateLogGroup
            Resource: !Sub arn:${AWS::Partition}:logs:*:*:*
          - Effect: "Allow"
            Action: 
              - ec2:DescribeRegions
              - logs:PutDestination
              - logs:DeleteDestination
              - logs:PutDestinationPolicy
            Resource: "*"
          - Effect: "Allow"
            Action: 
              - iam:CreateServiceLinkedRole
            Resource: !Sub arn:${AWS::Partition}:iam::*:role/aws-service-role/es.amazonaws.com/AWSServiceRoleForAmazonElasticsearchService*
            Condition:
              StringLike:
                "iam:AWSServiceName": "es.amazonaws.com"
      Roles:
        - !Ref HelperRole

  HelperLambda:
    Type: AWS::Lambda::Function
    DependsOn: HelperRolePolicy
    Properties:
      Description: centralized-logging - solution helper functions
      Environment:
        Variables:
          LOG_LEVEL: "info" #change to WARN, ERROR or DEBUG as needed
          METRICS_ENDPOINT: !FindInMap ["CLMap", "Metric", "MetricsEndpoint"]
          SEND_METRIC: !FindInMap ["CLMap", "Metric", "SendAnonymousMetric"]
          CUSTOM_SDK_USER_AGENT: "AwsSolution/SO0009/v4.0.3"
          CLUSTER_SIZE: !Ref ClusterSize
          SOLUTION_ID: "SO0009"
          SOLUTION_VERSION: "v4.0.3"
          STACK: "PrimaryStack"
      Handler: asset06330d812ce7a326b497981a5b3d1edc8e256f299353ea8840a882747ffbc0a3/index.handler
      Runtime: nodejs16.x
      Timeout: 300
      Role: !GetAtt HelperRole.Arn
      Code:
        S3Bucket: !Join ["-", [!FindInMap ["SourceCode", "General", "S3Bucket"], Ref: "AWS::Region"]]
        S3Key: !Join ["/", [!FindInMap ["SourceCode", "General", "KeyPrefix"],  "asset06330d812ce7a326b497981a5b3d1edc8e256f299353ea8840a882747ffbc0a3.zip"]]

  CustomResourceProviderframeworkonEventServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  CustomResourceProviderframeworkonEventServiceRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CustomResourceProviderframeworkonEventServiceRoleDefaultPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: 
              - lambda:InvokeFunction
            Resource: !GetAtt HelperLambda.Arn
      Roles:
        - !Ref CustomResourceProviderframeworkonEventServiceRole

  CustomResourceProviderframeworkonEvent:
    Type: AWS::Lambda::Function
    DependsOn: CustomResourceProviderframeworkonEventServiceRoleDefaultPolicy
    Properties:
      Description: AWS CDK resource provider framework - onEvent (CL-PrimaryStack/CustomResourceProvider)
      Code:
        S3Bucket: !Join ["-", [!FindInMap ["SourceCode", "General", "S3Bucket"], Ref: "AWS::Region"]]
        S3Key: !Join ["/", [!FindInMap ["SourceCode", "General", "KeyPrefix"],  "asset53c95d71cfd280747d971a38505aea07f812fdba75874a090358a2fc4f58f79b.zip"]]
      Role: !GetAtt CustomResourceProviderframeworkonEventServiceRole.Arn
      Environment:
        Variables:
          USER_ON_EVENT_FUNCTION_ARN: !GetAtt HelperLambda.Arn
      Handler: "asset53c95d71cfd280747d971a38505aea07f812fdba75874a090358a2fc4f58f79b/framework.onEvent"
      Runtime: "nodejs14.x"
      Timeout: 900

  CreateUUID:
    Type: Custom::CreateUUID
    Properties:
      ServiceToken: !GetAtt CustomResourceProviderframeworkonEvent.Arn

  CreateESServiceRole:
    Type: Custom::CreateESServiceRole
    Properties:
      ServiceToken: !GetAtt CustomResourceProviderframeworkonEvent.Arn

  # Creates a user pool in cognito to auth against
  ESUserPool:
    Type: AWS::Cognito::UserPool
    # UpdateReplacePolicy: "Retain"
    # DeletionPolicy: "Retain"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F78
            reason: MFA Configuration can be turned ON if required
    Properties:
      AutoVerifiedAttributes:
        - email
      EmailVerificationSubject: "Verify your new account"
      EmailVerificationMessage: "The verification code to your new account is {####}"
      Schema:
        - Name: email
          Mutable: true
          Required: true
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
          TemporaryPasswordValidityDays: 3
      SmsVerificationMessage: "The verification code to your new account is {####}"
      UsernameAttributes:
        - email
      UserPoolAddOns:
        AdvancedSecurityMode: ENFORCED
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: "The verification code to your new account is {####}"
        EmailSubject: "Verify your new account"
        SmsMessage: "The verification code to your new account is {####}"
      MfaConfiguration: "OFF"

  ESUserPoolESCognitoDomain:
    Type: "AWS::Cognito::UserPoolDomain"
    Properties:
      Domain: !Sub ${DomainName}-${CreateUUID.UUID}
      UserPoolId: !Ref ESUserPool

  # Create initial cognito user
  AdminUser:
    Type: AWS::Cognito::UserPoolUser
    Properties:
      DesiredDeliveryMediums:
        - EMAIL
      UserAttributes:
        - Name: email
          Value: !Ref AdminEmail
      Username: !Ref AdminEmail
      UserPoolId: !Ref ESUserPool

  # Creates a federated Identity pool
  ESIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: false # Prevent anonymous access

  CognitoAuthRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Federated: "cognito-identity.amazonaws.com"
            Action:
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "cognito-identity.amazonaws.com:aud": !Ref ESIdentityPool
              "ForAnyValue:StringLike":
                "cognito-identity.amazonaws.com:amr": authenticated

  CognitoAuthRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CognitoAuthorizedRolePolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: 
              - es:ESHttpGet
              - es:ESHttpDelete
              - es:ESHttpPut
              - es:ESHttpPost
              - es:ESHttpHead
              - es:ESHttpPatch
            Resource: !GetAtt ESDomain.Arn
      Roles:
        - !Ref CognitoAuthRole

  # Assigns the roles to the Identity Pool
  IdentityPoolRoleMapping:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: !Ref ESIdentityPool
      Roles:
        authenticated: !GetAtt CognitoAuthRole.Arn

  ESCognitoRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "es.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
      - PolicyName: ESCognitoAccess
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action:
              - cognito-idp:DescribeUserPool
              - cognito-idp:CreateUserPoolClient
              - cognito-idp:DeleteUserPoolClient
              - cognito-idp:DescribeUserPoolClient
              - cognito-idp:AdminInitiateAuth
              - cognito-idp:AdminUserGlobalSignOut
              - cognito-idp:ListUserPoolClients
              - cognito-identity:DescribeIdentityPool
              - cognito-identity:UpdateIdentityPool
              - cognito-identity:SetIdentityPoolRoles
              - cognito-identity:GetIdentityPoolRoles
            Resource:
              - !Sub "arn:${AWS::Partition}:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${ESUserPool}"
              - !Sub "arn:${AWS::Partition}:cognito-identity:${AWS::Region}:${AWS::AccountId}:identitypool/${ESIdentityPool}"

  ESCognitoRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ESCognitoRoleDefaultPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: 
              - iam:PassRole
            Resource: !GetAtt ESCognitoRole.Arn
            Condition:
              StringLike:
                "iam:PassedToService": "cognito-identity.amazonaws.com"
      Roles:
        - !Ref ESCognitoRole

  FirehoseRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: firehose.amazonaws.com
          Action: "sts:AssumeRole"

# the VPC stuff has been removed - for now.

  ESDomain:
    Type: AWS::Elasticsearch::Domain
    DependsOn: ESUserPoolESCognitoDomain
    # DeletionPolicy: "Retain"
    # UpdateReplacePolicy: "Retain"
    Properties:
      CognitoOptions:
        Enabled: true
        IdentityPoolId: !Ref ESIdentityPool
        RoleArn: !GetAtt ESCognitoRole.Arn
        UserPoolId: !Ref ESUserPool
      DomainEndpointOptions:
        EnforceHTTPS: true
        TLSSecurityPolicy: "Policy-Min-TLS-1-2-2019-07"
      DomainName: !Ref DomainName
      EBSOptions:
        EBSEnabled: true
        VolumeSize: 10
        VolumeType: gp2
      ElasticsearchClusterConfig:
        DedicatedMasterEnabled: true
        DedicatedMasterCount: 3
        DedicatedMasterType: !FindInMap [ESMap, MasterSize, !Ref ClusterSize]
        InstanceCount: !FindInMap [ESMap, NodeCount, !Ref ClusterSize]
        InstanceType: !FindInMap [ESMap, InstanceSize, !Ref ClusterSize]
        ZoneAwarenessEnabled: true
        ZoneAwarenessConfig:
          AvailabilityZoneCount: 2
      ElasticsearchVersion: 7.10
      EncryptionAtRestOptions:
        Enabled: true
        KmsKeyId: !Ref KMSKeyId
      NodeToNodeEncryptionOptions:
        Enabled: true
      SnapshotOptions:
        AutomatedSnapshotStartHour: "1"
      # V57095985 - 10/08/2018 - ES Domain needed configurations
      # https://github.com/awslabs/aws-centralized-logging/issues/2
      AdvancedOptions:
        rest.action.multi.allow_explicit_index: "true"
        indices.fielddata.cache.size: 40
      AccessPolicies:
        Version: 2012-10-17
        Statement:
          - Principal:
              AWS: !GetAtt CognitoAuthRole.Arn
            Effect: Allow
            Action:
              - es:ESHttpGet
              - es:ESHttpDelete
              - es:ESHttpPut
              - es:ESHttpPost
              - es:ESHttpHead
              - es:ESHttpPatch
            Resource: !Sub "arn:${AWS::Partition}:es:${AWS::Region}:${AWS::AccountId}:domain/${DomainName}/*"
          - Principal:
              AWS: !GetAtt FirehoseRole.Arn
            Effect: Allow
            Action:
              - es:DescribeElasticsearchDomain
              - es:DescribeElasticsearchDomains
              - es:DescribeElasticsearchDomainConfig
              - es:ESHttpGet
              - es:ESHttpPut
              - es:ESHttpPost
            Resource: !Sub "arn:${AWS::Partition}:es:${AWS::Region}:${AWS::AccountId}:domain/${DomainName}/*"
          - Principal:
              AWS: !GetAtt rCatalogIndexRole.Arn
            Effect: Allow
            Action:
              - es:ESHttpGet
              - es:ESHttpPut
              - es:ESHttpPost
            Resource: !Sub "arn:${AWS::Partition}:es:${AWS::Region}:${AWS::AccountId}:domain/${DomainName}/*"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: "The ES Domain is passed dynamically as as parameter and explicitly specified to ensure that IAM policies are configured to lockdown access to this specific ES instance only"

  Dlq:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Ref KMSKeyId


  CLTransformerServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  CLTransformerServiceRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CLTransformerServiceRoleDefaultPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: 
              - sqs:SendMessage
            Resource: !GetAtt Dlq.Arn
          - Effect: "Allow"
            Action: 
              - kinesis:DescribeStreamSummary
              - kinesis:GetRecords
              - kinesis:GetShardIterator
              - kinesis:ListShards
              - kinesis:SubscribeToShard
              - kinesis:DescribeStream
              - kinesis:ListStreams
              - kinesis:DescribeStreamConsumer
              - kinesis:DescribeStream
            Resource: !GetAtt CLDataStream.Arn
          - Effect: "Allow"
            Action: 
              - firehose:PutRecordBatch
            Resource: !GetAtt CLFirehose.Arn
          - Effect: "Allow"
            Action:
              - kms:Decrypt
            Resource: !Ref KMSKeyId
      Roles:
        - !Ref CLTransformerServiceRole

  CLTransformer:
    Type: AWS::Lambda::Function
    DependsOn: CLTransformerServiceRoleDefaultPolicy
    Properties:
      Description: centralized-logging - Lambda function to transform log events and send to kinesis firehose
      Code:
        S3Bucket: !Join ["-", [!FindInMap ["SourceCode", "General", "S3Bucket"], Ref: "AWS::Region"]]
        S3Key: !Join ["/", [!FindInMap ["SourceCode", "General", "KeyPrefix"],  "asset93c141eefda44fcb7e45e217e4f501ed5d29974bb6d3f99baedc70ab7d104060.zip"]]
      Role: !GetAtt CLTransformerServiceRole.Arn
      DeadLetterConfig:
        TargetArn: !GetAtt Dlq.Arn
      Environment:
        Variables:
          LOG_LEVEL: "info" #change to WARN, ERROR or DEBUG as needed
          SOLUTION_ID: "SO0009"
          SOLUTION_VERSION: "v4.0.3"
          UUID: !GetAtt CreateUUID.UUID
          CLUSTER_SIZE: !Ref ClusterSize
          DELIVERY_STREAM: CL-Firehose
          METRICS_ENDPOINT: !FindInMap ["CLMap", "Metric", "MetricsEndpoint"]
          SEND_METRIC: !FindInMap ["CLMap", "Metric", "SendAnonymousMetric"]
          CUSTOM_SDK_USER_AGENT: "AwsSolution/SO0009/v4.0.3"
      Handler: "asset93c141eefda44fcb7e45e217e4f501ed5d29974bb6d3f99baedc70ab7d104060/index.handler"
      Runtime: "nodejs16.x"
      Timeout: 300

  CLTransformerKinesisEventSourceCLPrimaryStackCLDataStream:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 100
      EventSourceArn: !GetAtt CLDataStream.Arn
      FunctionName: !Ref CLTransformer
      StartingPosition: TRIM_HORIZON

  Topic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "CL-Lambda-Error"
      KmsMasterKeyId: !Ref KMSKeyId

  TopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: Id1
        Version: "2012-10-17"
        Statement:
        - Sid: Sid1
          Effect: Allow
          Principal:
            AWS: !Sub "${AWS::AccountId}" # Allow CloudWatch Alarms
          Action: "sns:Publish"
          Resource: "*"
      Topics:
      - !Ref Topic

  TopicEndpointSubscription:
    Type: AWS::SNS::Subscription
    DependsOn: TopicPolicy
    Properties:
      Endpoint: !Ref AdminEmail
      Protocol: email
      TopicArn: !Ref Topic

  CLLambdaErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref Topic
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Dimensions:
        - Name: FunctionName
          Value: !Ref CLTransformer
      MetricName: "Errors"
      Namespace: "AWS/Lambda"
      Period: 300
      Statistic: Sum
      Threshold: 0.05

  CLDataStream:
    Type: AWS::Kinesis::Stream
    Properties:
      RetentionPeriodHours: 24
      ShardCount: 1
      StreamEncryption:
        EncryptionType: KMS
        KeyId: !Ref KMSKeyId
      StreamModeDetails:
        StreamMode: PROVISIONED

  CLBucket:
    Type: AWS::S3::Bucket
    # UpdateReplacePolicy: "Retain"
    # DeletionPolicy: "Retain"
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True

  CLBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CLBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowSSLRequestsOnly
            Principal: "*"
            Action: s3:*
            Effect: Deny
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${CLBucket}/*
              - !Sub arn:${AWS::Partition}:s3:::${CLBucket}
            Condition:
              Bool:
                aws:SecureTransport: False
          - Principal:
              AWS: !GetAtt FirehoseRole.Arn
            Action:
              - s3:Put*
              - s3:Get*
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${CLBucket}/*
              - !Sub arn:${AWS::Partition}:s3:::${CLBucket}
            Condition:
              Bool:
                aws:SecureTransport: False

  CLFirehoseFirehoseLogGroup:
    Type: AWS::Logs::LogGroup
    # UpdateReplacePolicy: Retain
    # DeletionPolicy: Retain
    Properties:
      RetentionInDays: 365

  FirehoseESLogStream:
    Type: AWS::Logs::LogStream
    # UpdateReplacePolicy: Retain
    # DeletionPolicy: Retain
    Properties:
      LogGroupName: !Ref CLFirehoseFirehoseLogGroup
      LogStreamName: ElasticsearchDelivery

  FirehoseS3LogStream:
    Type: AWS::Logs::LogStream
    # UpdateReplacePolicy: Retain
    # DeletionPolicy: Retain
    Properties:
      LogGroupName: !Ref CLFirehoseFirehoseLogGroup
      LogStreamName: S3Delivery

  FirehosePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CL-Firehose-Policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Action:
            - s3:AbortMultipartUpload
            - s3:GetBucketLocation
            - s3:GetObject
            - s3:ListBucket
            - s3:ListBucketMultipartUploads
            - s3:PutObject
          Resource:
            - !Sub arn:${AWS::Partition}:s3:::${CLBucket}/*
            - !Sub arn:${AWS::Partition}:s3:::${CLBucket}
        - Effect: Allow
          Action:
            - kms:GenerateDataKey
            - kms:Decrypt
          Resource: !Ref KMSKeyId
          Condition:
            StringEquals:
              "kms:ViaService": !Sub "s3.${AWS::Region}.amazonaws.com"
            StringLike:
              "kms:EncryptionContext:aws:s3:arn":
              - !Sub arn:${AWS::Partition}:s3:::${CLBucket}/*
        - Effect: Allow
          Action:
            - ec2:DescribeVpcs
            - ec2:DescribeVpcAttribute
            - ec2:DescribeSubnets
            - ec2:DescribeSecurityGroups
            - ec2:DescribeNetworkInterfaces
            - ec2:CreateNetworkInterface
            - ec2:CreateNetworkInterfacePermission
            - ec2:DeleteNetworkInterface
          Resource: "*"
        - Effect: Allow
          Action:
            - es:DescribeElasticsearchDomain
            - es:DescribeElasticsearchDomains
            - es:DescribeElasticsearchDomainConfig
            - es:ESHttpPost
            - es:ESHttpPut
          Resource:
            - !GetAtt ESDomain.Arn
            - !Sub ${ESDomain.Arn}/*
        - Effect: Allow
          Action:
            - es:ESHttpGet
          Resource:
            - !Sub ${ESDomain.Arn}/_all/_settings
            - !Sub ${ESDomain.Arn}/_cluster/stats
            - !Sub ${ESDomain.Arn}/cwl-kinesis/_mapping/kinesis
            - !Sub ${ESDomain.Arn}/cwl-kinesis/_nodes
            - !Sub ${ESDomain.Arn}/cwl-kinesis/_nodes/*/stats
            - !Sub ${ESDomain.Arn}/_stats
            - !Sub ${ESDomain.Arn}/cwl-kinesis/_stats
        - Effect: Allow
          Action:
            - logs:PutLogEvents
            - logs:CreateLogStream
          Resource:
            - !GetAtt CLFirehoseFirehoseLogGroup.Arn
        - Effect: Allow
          Action:
            - kms:Decrypt
          Resource: !Ref KMSKeyId
          Condition:
            StringEquals:
              "kms:ViaService": !Sub "kinesis.${AWS::Region}.amazonaws.com"
            StringLike:
              "kms:EncryptionContext:aws:kinesis:arn": !GetAtt CLDataStream.Arn
      Roles:
        - !Ref FirehoseRole

  CLFirehose:
    Type: AWS::KinesisFirehose::DeliveryStream
    DependsOn: FirehosePolicy
    Properties:
      DeliveryStreamEncryptionConfigurationInput:
        KeyType: CUSTOMER_MANAGED_CMK
        KeyARN: !Ref KMSKeyId
      DeliveryStreamName: CL-Firehose
      DeliveryStreamType: DirectPut
      ElasticsearchDestinationConfiguration:
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: /aws/kinesisfirehose/CL-Firehose
          LogStreamName: !Ref FirehoseESLogStream
        DomainARN: !GetAtt ESDomain.Arn
        IndexName: cwl
        IndexRotationPeriod: OneDay
        RoleARN: !GetAtt FirehoseRole.Arn
        S3BackupMode: AllDocuments
        S3Configuration:
          BucketARN: !GetAtt CLBucket.Arn
          CloudWatchLoggingOptions:
            Enabled: true
            LogGroupName: /aws/kinesisfirehose/CL-Firehose
            LogStreamName: !Ref FirehoseS3LogStream
          RoleARN: !GetAtt FirehoseRole.Arn

  CWDestinationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service: logs.amazonaws.com
          Action:
          - sts:AssumeRole
          Condition:
            StringLike:
              "aws:SourceArn": !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*

  CWDestPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CWDestPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Action:
            - kinesis:PutRecord
          Resource:
            - !GetAtt CLDataStream.Arn
        - Effect: Allow
          Action:
            - kms:GenerateDataKey
          Resource:
            - !Ref KMSKeyId
      Roles:
        - !Ref CWDestinationRole

  HelperRoleCWDestPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: HelperRoleCWDestPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: 
              - iam:PassRole
            Resource: !GetAtt CWDestinationRole.Arn
      Roles:
        - !Ref HelperRole

  #
  # CloudWatch Alarms
  #

  StatusYellowAlarm:
    DependsOn: TopicEndpointSubscription
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmActions:
        - !Ref Topic
      AlarmDescription: "Replica shards for at least one index are not allocated to nodes in a cluster."
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref DomainName
      EvaluationPeriods: 1
      MetricName: "ClusterStatus.yellow"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref Topic
      Period: 60
      Statistic: Maximum
      Threshold: 1

  StatusRedAlarm:
    DependsOn: TopicEndpointSubscription
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmActions:
        - !Ref Topic
      AlarmDescription: "Primary and replica shards of at least one index are not allocated to nodes in a cluster."
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref DomainName
      EvaluationPeriods: 1
      MetricName: "ClusterStatus.red"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref Topic
      Period: 60
      Statistic: Maximum
      Threshold: 1

  CPUUtilizationTooHighAlarm:
    DependsOn: TopicEndpointSubscription
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmActions:
        - !Ref Topic
      AlarmDescription: "Average CPU utilization over last 45 minutes too high."
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref DomainName
      EvaluationPeriods: 3
      MetricName: "CPUUtilization"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref Topic
      Period: 900
      Statistic: Average
      Threshold: 80

  MasterCPUUtilizationTooHighAlarm:
    DependsOn: TopicEndpointSubscription
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmActions:
        - !Ref Topic
      AlarmDescription: "Average CPU utilization over last 45 minutes too high."
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref DomainName
      EvaluationPeriods: 3
      MetricName: "MasterCPUUtilization"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref Topic
      Period: 900
      Statistic: Average
      Threshold: 50

  FreeStorageSpaceTooLowAlarm:
    DependsOn: TopicEndpointSubscription
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmActions:
        - !Ref Topic
      AlarmDescription: "Cluster has less than 2GB of storage space."
      ComparisonOperator: LessThanOrEqualToThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref DomainName
      EvaluationPeriods: 1
      MetricName: "FreeStorageSpace"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref Topic
      Period: 60
      Statistic: Minimum
      Threshold: 2000

  IndexWritesBlockedTooHighAlarm:
    DependsOn: TopicEndpointSubscription
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmActions:
        - !Ref Topic
      AlarmDescription: "Cluster is blocking incoming write requests."
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref DomainName
      EvaluationPeriods: 1
      MetricName: "ClusterIndexWritesBlocked"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref Topic
      Period: 300
      Statistic: Maximum
      Threshold: 1

  JVMMemoryPressureTooHighAlarm:
    DependsOn: TopicEndpointSubscription
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmActions:
        - !Ref Topic
      AlarmDescription: "Average JVM memory pressure over last 15 minutes too high."
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref DomainName
      EvaluationPeriods: 1
      MetricName: "JVMMemoryPressure"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref Topic
      Period: 900
      Statistic: Average
      Threshold: 80

  MasterJVMMemoryPressureTooHighAlarm:
    DependsOn: TopicEndpointSubscription
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmActions:
        - !Ref Topic
      AlarmDescription: "Average JVM memory pressure over last 15 minutes too high."
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref DomainName
      EvaluationPeriods: 1
      MetricName: "MasterJVMMemoryPressure"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref Topic
      Period: 900
      Statistic: Average
      Threshold: 50

  MasterNotReachableFromNodeAlarm:
    DependsOn: TopicEndpointSubscription
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmActions:
        - !Ref Topic
      AlarmDescription: "Master node stopped or not reachable. Usually the result of a network connectivity issue or AWS dependency problem."
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref DomainName
      EvaluationPeriods: 1
      MetricName: "MasterReachableFromNode"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref Topic
      Period: 60
      Statistic: Minimum
      Threshold: 1

  AutomatedSnapshotFailureTooHighAlarm:
    DependsOn: TopicEndpointSubscription
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmActions:
        - !Ref Topic
      AlarmDescription: "No automated snapshot was taken for the domain in the previous 36 hours (created by marbot)."
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref DomainName
      EvaluationPeriods: 1
      MetricName: "AutomatedSnapshotFailure"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref Topic
      Period: 60
      Statistic: Maximum
      Threshold: 1

Outputs:
#  DestinationSubscriptionCommand:
#    Description: Command to run in spoke accounts/regions
#    Value: !Sub "aws logs put-subscription-filter       --destination-arn arn:${AWS::Partition}:logs:<region>:${AWS::AccountId}:destination:CL-Destination-${CreateUUID.UUID}       --log-group-name <MyLogGroup>       --filter-name <MyFilterName>       --filter-pattern <MyFilterPattern>       --profile <MyAWSProfile> "

  UniqueID:
    Description: UUID for Centralized Logging Stack
    Value: !GetAtt CreateUUID.UUID

  AdminEmail:
    Description: Admin Email address
    Value: !Ref AdminEmail

  DomainName:
    Description: ES domain name
    Value: !Ref DomainName

  KibanaURL:
    Description: Kibana URL
    Value: !Sub https://${ESDomain.DomainEndpoint}/_plugin/kibana/

  DomainEndpoint:
    Description: ES domain endpoint URL
    Value: !Sub ${ESDomain.DomainEndpoint}

  ClusterSize:
    Description: ES Cluster size
    Value: !Ref ClusterSize

  oKibanaStreamArn:
    Description: ARN of the Kinesis Stream that collates logs
    Value: !GetAtt CLDataStream.Arn

  oKibanaStreamRoleArn:
    Description: ARN of the Kinesis Stream that collates logs
    Value: !GetAtt CWDestinationRole.Arn